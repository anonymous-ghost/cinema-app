import React, { useState, useEffect } from "react";
import { Film } from "../types";
import "../styles/Favorites.css";
import { Link } from 'react-router-dom';

const Favorites: React.FC = () => {
  const [favoriteFilms, setFavoriteFilms] = useState<Film[]>([]);
  const [isLoading, setIsLoading] = useState(true);

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–±—Ä–∞–Ω–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤ –∑ localStorage
  useEffect(() => {
    const loadFavorites = () => {
      try {
        const storedFavorites = localStorage.getItem("favoriteFilms");
        if (storedFavorites) {
          setFavoriteFilms(JSON.parse(storedFavorites));
        }
      } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–±—Ä–∞–Ω–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤:", error);
      } finally {
        setIsLoading(false);
      }
    };
    
    loadFavorites();
  }, []);

  // –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ—ñ–ª—å–º—É –∑—ñ —Å–ø–∏—Å–∫—É –æ–±—Ä–∞–Ω–∏—Ö
  const removeFromFavorites = (filmId: string) => {
    const updatedFavorites = favoriteFilms.filter(film => film.id !== filmId);
    setFavoriteFilms(updatedFavorites);
    localStorage.setItem("favoriteFilms", JSON.stringify(updatedFavorites));
  };

  if (isLoading) {
    return (
      <div className="loading-container">
        <div className="loading-spinner"></div>
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–±—Ä–∞–Ω–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤...</p>
      </div>
    );
  }

  return (
    <div className="favorites-container">
      <div className="favorites-header">
        <h1 className="text-netflix">–û–ë–†–ê–ù–Ü –§–Ü–õ–¨–ú–ò</h1>
        <p className="favorites-subtitle">–í–∞—à–∞ –æ—Å–æ–±–∏—Å—Ç–∞ –∫–æ–ª–µ–∫—Ü—ñ—è —É–ª—é–±–ª–µ–Ω–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤</p>
      </div>

      {favoriteFilms.length === 0 ? (
        <div className="empty-favorites">
          <div className="empty-favorites-icon">üé¨</div>
          <h2>–°–ø–∏—Å–æ–∫ –æ–±—Ä–∞–Ω–∏—Ö –ø–æ—Ä–æ–∂–Ω—ñ–π</h2>
          <p>–î–æ–¥–∞–π—Ç–µ —Ñ—ñ–ª—å–º–∏ –¥–æ –æ–±—Ä–∞–Ω–∏—Ö, —â–æ–± –∑–Ω–∞–π—Ç–∏ —ó—Ö —Ç—É—Ç</p>
          <Link to="/" className="browse-movies-btn">–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ñ—ñ–ª—å–º–∏</Link>
        </div>
      ) : (
        <div className="favorites-films">
          {favoriteFilms.map((film) => (
            <div className="favorite-film-card" key={film.id}>
              <div className="favorite-poster-container">
                <img src={film.posterUrl} alt={film.title} className="favorite-poster" />
                <button 
                  className="remove-favorite-btn" 
                  onClick={() => removeFromFavorites(film.id)}
                  aria-label="–í–∏–¥–∞–ª–∏—Ç–∏ –∑ –æ–±—Ä–∞–Ω–∏—Ö"
                >
                  ‚úï
                </button>
              </div>
              <div className="favorite-film-info">
                <h3 className="favorite-film-title">{film.title}</h3>
                <div className="favorite-film-rating">
                  <span className="star-icon">‚òÖ</span>
                  <span>{film.rating}</span>
                </div>
                <div className="favorite-film-genres">
                  {film.genres.map((genre, index) => (
                    <span key={index} className="favorite-film-genre">{genre}</span>
                  ))}
                </div>
                <p className="favorite-film-year">{film.year}</p>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default Favorites;